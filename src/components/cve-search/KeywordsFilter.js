import React, { useState } from 'react';
import {
  Box, InputGroup, InputLeftElement, InputRightElement, Input, List,
} from '@chakra-ui/react';
import { useTranslation } from 'react-i18next';

import Tooltip from '../../common/Tooltip';
import { PlusIcon, VulnerabilityIcon, TimesIcon } from '../../common/Icons';
import SuccessButton from '../../common/SuccessButton';

const KeywordsFilter = ({ keywords, setKeywords, ...style }) => {
  const { t } = useTranslation();
  const keywordsTitleT = t('cve-search.keywords-title');
  const keywordsExplanationT = t('cve-search.keywords-explanation');
  const keywordT = t('cve-search.keyword');

  const [keyword, setKeyword] = useState('');

  const handleInputChange = (e) => {
    setKeyword(e.target.value);
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();
    const normalizedKeyword = keyword.trim().toLowerCase();
    const foundInKeywords = keywords.find((element) => element === normalizedKeyword);

    if (normalizedKeyword && !foundInKeywords) {
      setKeywords((prev) => [...prev, normalizedKeyword]);
    }

    setKeyword('');
  };

  const removeKeywordFromList = (id) => {
    const newKeywords = keywords.filter((word, index) => index !== id);
    setKeywords(newKeywords);
  };

  const keywordsElements = keywords.map((word, index) => (
    <SuccessButton
      // eslint-disable-next-line react/no-array-index-key
      key={index}
      borderRadius="5px"
      mx={2}
      mb={2}
      py={2}
      px={4}
      display="flex"
      alignItems="center"
      onClick={() => removeKeywordFromList(index)}
    >
      {word}
      <TimesIcon ml={4} />
    </SuccessButton>
  ));

  return (
    <Box
      as="form"
      onSubmit={handleFormSubmit}
      autoComplete="off"
      textAlign="center"
      {...style}
    >
      <Tooltip title={keywordsTitleT} message={keywordsExplanationT} />
      <InputGroup
        maxW="300px"
        mx="auto"
        mt={[3, 3, 6]}
      >
        <InputLeftElement
          zIndex={0}
        >
          <VulnerabilityIcon
            pointerEvents="none"
            color="gray.600"
            fontSize="1.2em"
          />
        </InputLeftElement>
        <Input
          placeholder={keywordT}
          value={keyword}
          onChange={handleInputChange}
        />
        <InputRightElement>
          <PlusIcon
            onClick={handleFormSubmit}
            color="blue.500"
            cursor="pointer"
          />
        </InputRightElement>
      </InputGroup>
      <List display="flex" flexWrap="wrap" justifyContent="center" alignItems="center" mt={4} maxW="100%">
        {keywordsElements}
      </List>
    </Box>
  );
};

export default KeywordsFilter;
